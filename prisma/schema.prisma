// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SuperRole {
  id      Int    @id @default(autoincrement())
  roleId  String @unique @map("role_id") @db.VarChar(255)
  guildId String @map("guild_id") @db.VarChar(255)

  @@map("super_roles")
}

model Project {
  id        Int        @id @default(autoincrement())
  guildId   String     @map("guild_id")
  title     String     @db.VarChar(255)
  poster    String
  messageId String?    @map("message_id") @db.VarChar(255)
  channelId String?    @map("channel_id") @db.VarChar(255)
  branchId  String?    @map("branch_id") @db.VarChar(255)
  staff     Employee[]
  platforms Platform[]
  curator   Curator?
  curatorId Int?       @unique @map("curator_id")

  @@map("projects")
}

model Curator {
  id        Int     @id @default(autoincrement())
  guildId   String  @map("guild_id")
  userId    String  @map("user_id")
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int     @unique @map("project_id")

  @@map("curators")
}

model Employee {
  id         Int        @id @default(autoincrement())
  userId     String
  project    Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
  profession String
  projectId  Int        @map("project_id")

  @@map("employes")
}

model Platform {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  url       String
  Project   Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int?     @map("project_id")

  @@map("platforms")
}
